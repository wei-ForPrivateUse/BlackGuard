/*
 * Replay(a2Game_Sample).h
 *
 *  Created on: Jan 14, 2015
 *      Author: wei
 */

#ifndef REPLAY_A2GAME_SAMPLE__H_
#define REPLAY_A2GAME_SAMPLE__H_

#include <iostream>
#include <fstream>

void Draw();

void DrawSolidCircle(const b2Vec2& center, float32 radius, const b2Color& color);
void DrawSolidPolygon(const b2Vec2* vertices, int32 vertexCount, const b2Color& color);
void DrawString(int x, int y, const char *string, ...);
void DrawString(const b2Vec2& p, const char *string, ...);
void DrawSegment(const b2Vec2& p1, const b2Vec2& p2, const b2Color& color);

class Replay_a2Game_Sample: public Test {
public:

	Replay_a2Game_Sample() {
		ANNWeights* weights = new ANNWeights({28, 20, 2}, {false, true, false}, {false, true, true}, true);

		double w[1022] = {0.6826197208293321,-0.3284360177927852,-0.4711121567898602,0.7509116521597812,0.8153849497928705,0.6079089500070494,-0.8003360984301412,-0.6621298436491682,0.43215545074973777,0.4467352564047794,-0.8076198235000821,0.4249184281441624,0.8726043663446379,0.808380363449598,0.7126363758957518,0.3183236498655994,-0.8341473083313357,-0.48890874439342175,0.2512795191570417,-0.4807330327665216,-0.7133765676224035,-0.5548907493461579,-0.5618427424200538,-0.0885733685378811,0.9752208638809999,-0.6467322092437814,0.5401097992057755,0.4427547565063311,0.6217278342394664,-0.7563439443739545,0.9005166897270984,-0.08824055942939793,-0.892966777754659,-0.4511590094516777,0.4599677412344926,0.1830697189410156,-0.20186319893433366,-0.4718317540101855,0.4525438368930624,-0.4503012766733495,-0.5555551256469167,0.5060217607808154,0.5880585556813626,0.10670464955615068,0.3410270905088809,0.6302394189094497,-0.8020478703465663,0.547634403135972,-0.49951133743776055,0.09852789289275468,0.19744895519531375,-0.5126336331231506,0.9277371986083492,0.2247218091659601,0.44867894054531887,0.22772206948289386,0.5880780219599682,-0.8269991527750157,-0.33822661155908945,0.7816072973891164,0.09286062996177694,-0.15482823204998125,0.686673134853829,0.8185142153548142,0.7512851291961592,0.49675883618877215,0.4904753524874085,0.46016243103683596,0.3020566118444073,0.1483476602870469,0.6223271647010141,-0.6887479725516213,-0.6317373199303828,0.10817649123909917,0.7141733587814474,-0.7283814144060152,-0.3555739748565874,-0.005215758015719316,0.4203582626554135,0.13811283513132389,0.4659832668192712,0.8298990886569421,0.014262662400432604,0.20750198050304927,0.3102325871347347,-0.12097641386886132,-0.8420042131945495,0.9313633436242567,0.26725688743403603,0.9868238041513118,0.8151651187204852,-0.321605698902043,-0.3042074162539589,-0.342996025274196,0.40316900883837203,0.34449181277809854,0.5794389667186609,0.9641742918729176,-0.9423724386788371,0.9864926121067261,0.7991423884798535,0.011600629563583754,-1.0,0.26955081360903616,0.8571663726756629,-0.5630752328932637,-0.7502183784835105,-0.3779589966882847,0.045271037162341835,-0.9163382197906622,-0.6087632460825366,0.9473027002658442,0.41590881104361827,0.9676449762165981,0.9655375515939296,0.37036463859971963,-0.7134295352890019,0.3405819858543222,-0.7899863379154161,-0.8337911029207696,0.6509852305025043,0.7498571985822958,1.0,-0.6565980294767132,0.6670247262065551,0.2577932359820374,0.9656034960526699,-0.4476659485009004,0.644077161056814,-0.9988987300296486,0.5374967264021547,-0.4382545085940406,0.16651854905254423,-0.6923446181645144,0.19075944462604483,-0.06354279704242514,-0.7588590524650035,-0.3217543197499584,-0.45075997169520204,0.2881926654531239,-0.079813064004316,-0.34644243931614177,-0.40089403337948876,-0.505271233649956,5.905870480285287E-4,-0.9231599804223087,-0.9042648569251114,0.5114488370282604,0.6431322512196882,-0.3187317664094358,-0.6565897224424905,0.552623520777261,-0.17173462943721512,0.5566093137344381,0.36478168945736617,-1.0,0.23239776729345807,-1.0,0.0661347191833122,-0.6382051102465393,0.5762600734469853,-0.9238540434602477,-0.3900140912641663,0.6224451833950085,0.34733903518509346,0.43207106169477477,-0.8508988603000673,0.6910613511692576,-0.9723341289059518,-0.6544691775679624,-0.734106607508128,-0.5787097344129726,0.3566247225440149,0.12775050350374267,-0.1553446529325606,-1.0,-0.7339533241845883,0.8592740685333262,-0.946653728298712,-0.0012544517662005496,0.342018518888259,-0.2587597085423076,-0.7033552927542788,-0.11665076164574939,-0.15716689526578828,-0.9636646773211178,-0.6959499916738979,0.4271719768332888,0.9228398174491554,-0.020688415654528655,-0.38169461715816727,0.2514080143764178,-0.36501946291998044,-0.9308603838559424,-0.5745544324591385,0.8854445932942414,0.09786240491304038,0.09331708221548586,0.4763860327596634,-0.7632311320768471,0.6734560285603501,-0.6205393027436656,0.0817451762812214,-0.6146401794515065,0.08128044741094984,0.06466729071952548,0.16906758429479854,0.19607612960447357,0.4989699536551859,-0.582654998128048,-0.20863517456841352,-0.3344282142414146,-0.4284580131838073,-0.05649364924059126,0.7114360456815202,0.7370050103363601,0.6895793807685584,0.39786103302726783,0.963703400895673,-0.9788027463190466,-0.7269629756725552,0.6751974249470173,0.3195698835237858,-0.3001835321988053,0.27276018970143406,-0.7055137983708941,0.7820595352175679,-0.6290091420502302,-0.4078553384823542,0.8444286515685642,0.3474143526368509,0.08959931119524484,0.5631830780667327,-0.8629682965557833,0.8004951955698372,-0.8204559989081224,0.4628894766333207,-0.44505906259460953,-0.12047404754088085,0.02155359751586544,-0.7767845619492094,-0.5795145917027432,0.03905074076952738,-0.7516439528213218,-0.5024447983638531,-0.10940860676378168,0.11637028391285989,1.0,-0.023195198576407602,-0.1719834230743379,-0.40478008323336734,0.6020915159239941,-0.6488668190798645,0.5377076741678266,0.5418530883081254,-0.8582772184192794,-0.8246677132907317,-0.8464419175605098,0.670691152738958,0.036488584612927734,-0.2705677885891674,0.04562177721950446,-0.7700641114694705,-0.19601625994560004,0.9874647384430255,0.5761647018389003,0.6712449596625625,0.9770726684284287,-0.9292018509857424,-0.15947250507193178,-0.9187006297958575,0.4021824355388014,-0.9811011689392061,-0.6145235737465602,0.9003522365734383,-0.10753094505607014,0.11728266836586879,-0.7491608541672434,-0.22948215403679595,0.6379952361809024,0.38607323174144215,0.5679420417828379,0.82335172304143,-0.43528638246263274,-0.3155961541930882,0.957804889742828,0.7773140250252085,0.5115805830810195,-0.9663247953267958,-0.34138440398735515,0.8677647160976899,-0.7578955630260614,-0.7313774528092086,-0.9204237795701794,-0.4851380818585374,-0.5835160234525878,0.8831706442675219,0.8407097309760005,0.9722464192532183,0.4222790556948371,-0.7857424351679893,0.28875391163545033,0.8704543883359604,0.5264975480794087,0.7679258158982526,-0.20205722604124435,-0.7624973323784882,-0.4806472412385318,-0.3508144256707172,0.1676552946221695,-0.7851910318815766,0.062449749695240836,0.7690369552664751,0.4271895297700254,-0.6267305366685759,-0.11212359324119568,0.40254628052727187,-0.24570109954612218,-0.8217991866706008,-0.7443142167664623,-0.1960972898218419,0.2128491714120409,-0.960046461897495,0.9104532079333544,0.8449890633543865,-0.9410120520883142,0.15826427484645664,-0.635346632962367,0.9867646169249442,-0.4252047120498816,-0.8277297010693018,0.6678328564856455,0.9281289520211997,0.8850860246224476,-0.7036295015918695,0.985779925089446,-0.8658875807605829,-0.8942323932446871,-0.979774908837537,-0.8505910941558152,-0.7819628762367118,0.160937127643862,0.22284457805719218,0.07352197319812082,-0.4860547482537634,0.33646989375904945,0.8582644959494536,0.4978110387405636,0.43762923685303007,-0.3451082410200016,0.1977308831917496,-0.18217242747063558,0.8875254281516525,0.7268502590050961,0.15850042820213892,-0.2157185561255405,-0.6349256423019908,0.054121298856859526,0.9558442960040419,0.31107702698204387,-0.05410299883549008,0.7903064312479087,-0.871435156392529,-0.06324439378563272,0.5394001131690918,0.22306997459132633,-0.8141281491028345,0.3446957686958724,-0.35163819981339084,-0.11001676019755892,0.3732648593319844,0.3343222621068896,-0.4981889980007496,-0.19776880591768792,0.25074623578325517,-0.24111821269897776,-0.33310620600479585,-0.06779544843121957,0.7902575263075079,-0.42199012962584276,-0.2337040000167438,-0.6134544971815717,0.029875419992083044,-0.6000590180715566,-0.526189804096448,0.45194946821814297,-0.8752686553793194,0.32941185876897183,-0.9700594671358589,-0.42717730745497684,-0.3214938323313401,-0.41352480478063175,0.06951833025274919,0.9575173077498473,-0.15118676591117639,0.9600705359553905,-0.1048642258783021,0.3913145685252053,0.02494557790830059,-0.8325234297081106,-0.7073689975624948,-0.04139833507322617,-0.13835224209777594,-0.61287597624397,-0.734721614647273,-0.22009728033693854,0.4254720988424745,-0.08113215043904937,0.16345386411249987,0.7640307411580304,-0.5006119035618228,0.13535752020732097,-0.36394257520562634,0.41827660425129787,0.3251270636508118,0.6649645409060075,-0.052628819377192736,0.33924309532976704,-0.0013418421350976017,-0.07391398933390084,0.42710132756233055,0.012084254793995258,-0.2131845428726434,0.12206104430354076,0.29406348479417527,0.8028507474202118,-0.9806739315501896,0.007501423163372965,0.4099981679208943,0.6553265551609696,0.9544271879684849,-0.4028524769238156,0.028432044327181244,-0.6092417578438134,-0.907688259778675,0.6876329743690044,0.3388087438765668,-0.8401899935005711,0.2181374247990262,0.22811880080352254,0.16540722085148224,0.6103793029425881,-0.7091748886226009,-0.6861891059010423,0.6578342333157202,-0.9693315836002558,0.6959209621578522,-0.07854243572927677,-0.9629560406001458,0.5652331187221468,-0.8596399588984828,-0.6135279121715579,0.42116777201913225,-0.5830502446569777,-0.7785595846060231,0.0025169806489557037,0.49736675390314544,-0.15665433872753293,-0.012134167072283736,-0.009406637628974337,-0.43280431340405023,-0.8536653353685729,-0.06580946120342279,0.34241625627187167,0.6116014146451505,-0.09295408909839141,-0.7960529503801348,-0.08729015486372735,-0.7858751733649928,-0.4379157231885962,0.3472505721652043,0.20824258566222414,-0.8692793816160543,-0.6238444147535881,-0.48805270133676054,0.6535897070513167,0.5719127210195393,0.2966540232699984,-0.8808575731436166,0.4726673723742228,-0.8701681478449188,-0.23325568184771012,-0.7020742572960896,-0.7802092474642335,-0.6158386239461181,-0.2993732919976727,0.2059675306450229,0.8846146535517202,-0.13440703514845415,0.9427113166124343,-0.3750359115639922,-0.7937702382713108,-0.34321507376655974,-0.016992628808176573,-0.04845067700898052,-0.7244293550218891,-0.035211322827939345,0.04639029076641397,-0.7383032360644974,0.36260698699258437,-0.40433846936561596,-0.2563478252163451,-0.6134432881593034,0.8639490599077164,-0.7520822833879915,-0.1744508288658013,0.4822218170385463,0.18395705846914456,0.09801034119500654,-0.9692386056577325,0.9848137423518906,-0.5210692240640841,-0.566536397049596,1.0,-0.0180837216223258,0.2507493184007183,0.17926810249095668,-0.9808045346169729,0.021333791421810522,0.09436280542499198,0.47639241640309815,0.7951782303592204,-0.07983991278944967,-0.39419173921921175,-0.48787509071167423,0.745276090694584,-0.5162918978739683,-0.49429269726877595,0.9011189661934867,-0.4979355436582993,0.24721059432782908,0.37114922923249083,-0.7127282689721499,-0.11665108798646473,-0.3513178041932149,-0.541970814296558,-0.39731113064739837,-0.41790598164875364,0.035824422016299325,0.39399426190896697,-0.9951036237812898,-0.4543526685313765,0.946313128192729,-0.9068047693891611,0.33286516546252276,0.11622038251714265,-0.4808635353865825,0.34855429471708044,-0.9548392899064503,-0.08691281861508869,-0.2904671083742807,1.0,-0.418559803939029,-0.13447365873116873,-0.4116987927863108,-0.7912126184015487,0.0954610013672282,-0.5228360287244375,0.12464572786090455,0.8774149509391401,-0.7162812480814358,0.3790816022970897,1.0,0.2621470722200315,0.7679120159569808,-0.25209042350066885,-0.09380836751445938,0.661551995085581,0.40627796145354467,0.0887769887711532,0.3545845800343273,0.022965523317871734,-0.6470958270076803,-0.8431598276238038,0.15420554361017152,0.6203435434837077,0.02371786119096175,-0.2203431833818549,0.2938377902305499,-0.5142204904375204,0.11203673595526753,-0.16940033298575957,-0.5156929447034438,0.9648915283965411,0.36009553253973275,0.31182820731684147,-1.0,0.6498468237532792,0.46585861097092995,0.5352395571906803,-0.9700287680932086,0.6007372829569539,0.8869020302309711,-0.7070702428503064,0.4644314714017349,-0.47186828269338804,0.9517544021823025,-0.6598193446165037,0.9940689230593504,-0.91776168104073,-0.15531285105136203,0.8945430651416063,0.6646158144964416,-0.6456232272992158,0.9032196145420293,-0.364684567198949,-0.41613789283721314,-0.8262464857944247,0.3131441661825944,-0.3644628639342016,-0.8925942821344411,0.3118451675997176,-0.5316369427896134,0.38614790751193523,-0.11775485463881664,-0.41232975922808207,-0.8242949064565149,0.5596953230052772,0.6404065892501505,0.45480436323567963,-0.5489059351570901,0.013121533757712054,-0.8272734939565268,0.4897630854786081,-0.45626312395193763,0.7718484210885244,-0.8586546281516525,0.26233392196129496,-0.8361838488544528,-0.38047521867938994,-0.1763777663972927,0.14385552577451438,0.27957085842544,-0.4726193709379488,-0.33457189333504705,0.11362087075212979,0.15085046274255481,0.14818581540323797,0.42599300371189325,-0.4288288172862741,-0.24903531958547231,0.2479249099563192,-0.6206918170457181,0.09565652556271506,0.7125820531381304,0.8955621234646362,-0.7594821404953559,-0.9945482973181179,-0.8762664134240215,-0.22036626117005909,0.8085346695588469,-0.5785720936094394,0.6575298361492922,-0.9900602857246947,0.04738017468946068,-0.5131793399130318,-0.5533382917666446,0.12405594248540532,0.6889706089792436,0.36600474116555054,0.6107911660693449,0.9678907520491679,0.49884555041931633,-0.7865594965142741,0.6007303761769458,-0.1063498783923063,-0.40159864725934213,0.6575662577736396,0.5253925565604758,0.1937522932104764,0.8388270281833251,1.0,0.6027895584156607,0.6901700081631156,-0.05139991479431534,0.4775333030877712,-0.9813170441616782,0.3029466652482287,0.4146847415679155,-0.6894844059520837,-0.13376790582554351,0.5694591500650649,-1.0,-0.39814084041481057,-0.8301295656977828,0.7898435022841598,-0.17330281324935695,0.9009897284495055,0.9621825307321819,-0.2972605902814598,-0.630473795895678,-0.21838473398434888,0.6175707252375003,0.6132397073259636,-0.9598384969853668,-0.6279846552355304,-0.7269144582325384,0.4879311376524599,-0.7298111554828797,-0.509842787067525,-0.9175442408180411,-0.7897032867088242,0.6143932217176673,0.5499374473435754,-0.2818776652647194,-0.6402404316640635,0.1408192911061419,0.926652024656922,0.05145950535920858,-0.587363332114059,0.2697731081437859,0.3166386168598022,-0.7121766279260882,0.10719688828705892,-0.4687869741680455,-0.7052427461853145,0.9704337434725725,0.9016850022063211,0.4490877638375755,0.6019916699764716,0.4698100178636713,-0.9006145850243167,0.608619864099484,0.9935587386354965,0.46115241681963814,-0.6565695571819185,-0.28736913233479283,-0.37719641685230126,0.8786071877806138,-0.10626307515162732,-0.0934791375117511,0.9850536146078172,-0.19387305940083857,-0.43131498167469073,-0.18018341095440854,0.1507364672835162,-0.42138920534187263,0.015174272425899667,0.12488132723932191,0.7201027140534292,0.9299456039663547,-0.016652137906387563,0.15365688770944283,0.18217014789354988,-0.244942339666841,-0.3974271331892348,-0.555557037225578,-0.9100970575359102,-0.6645278597943389,-0.7079070896473416,0.6987475521018676,0.6485015877818315,0.1412612624885746,-0.044111958643760635,0.19664881893532016,0.7199919749268622,0.6817554395879533,0.12919863691025713,0.30477781318603303,0.476198400087296,-0.7668369825934721,-0.9355365697789537,-0.5148180127942646,0.8590470466963244,-0.5260209698734356,-0.7164749755792817,0.21987443319159772,0.6842469845079979,-0.7652895414246517,-0.6784699546637284,-0.7312470172500002,0.7712768939766499,0.35353097190623567,-0.49394070780535665,-0.5396828758235909,0.8006183252294997,0.27668469211623087,0.6875055111228964,0.47386249433276595,0.5905571382415473,0.8034874442482834,-0.32539069075524935,0.5500888034804307,-0.24021205414639038,-0.18841273634393216,-0.6196546345889042,-0.10242512590217352,-0.9432507245981824,-0.9123803659984606,0.24040316940430007,-0.2268207047648256,0.6045704485817214,-0.9123942351423626,0.2886993245476485,-0.05406093033103229,0.21951926192791274,0.48374980026875053,-0.9083821530833113,-0.6600343057885705,-0.475547154049342,-0.02852451472057446,0.6311942131340577,0.29949351706854105,-0.8108948760868195,-0.39307339033547517,-0.36376722981141474,0.7287428170777643,-0.6718964712610687,0.3479062862230804,0.5236330471235172,-0.644502133608775,-0.14874280655396235,0.7614970464213286,-0.9577504853360336,0.5831743726738299,-0.7219749078369592,-0.20534748996800478,0.6751958396742566,-0.6904787616072059,0.14767369238523767,0.30910427430014165,-0.9004448700041456,0.17271460092372504,0.519607085625319,0.19124779336014888,-0.6371742496843572,1.820647768998305E-5,-0.13757563518617638,-0.11194922707169667,0.9305471019920627,0.5180815759068348,-0.518529692628306,0.7064173666183649,0.9967041631053144,0.3313721548786592,-0.43467740950121164,-0.23873009549656343,-0.9685740831836954,-0.9113267912834503,0.5877426230881162,-0.2414439193891128,-0.63625392385335,-0.6907046611455304,0.5535892611122576,-0.8108240278388954,-0.09468792003304334,0.8886363865013309,0.8501388446590195,-0.2597458154163653,-0.1891193996594331,-0.18014546392268752,0.32855532442388136,-0.16424986194009955,-0.7315056139829123,0.45295646038433823,-0.35696615019034256,0.20834957965479506,-1.0,0.3275567848293272,-0.9707806856037401,0.550857154252584,-0.5399561593905589,0.19169593457505907,-0.12411652788644667,0.411188714800904,-0.8650523135100381,0.23118909951235955,0.43388784899655264,0.2883886488599542,-0.7669270561394964,0.024500425150867457,0.6915948424139318,-0.357980043417139,0.13271679515185178,0.6513818776381598,-0.5860264362744986,-0.11539736320650838,-0.03067396943304826,0.16813540524008166,-0.8603469514975024,-0.6043597951856232,0.5513166600414036,0.5338978538229766,0.71141968554158,-0.4851555132166655,-0.48548625296715,1.0,0.6222447857766163,-0.1402235942967729,0.2778607614926633,-0.5267405523140323,-0.33718413333021086,-0.5230827728161135,-0.4037353738594141,-0.37956364184480823,-0.3952384917966528,-1.0,-0.5960711426905756,-0.883859271803498,0.5131613934398686,0.44934262092499105,-0.8494265307198964,-0.7036246632409449,0.7325698287543196,-0.31906772198246103,-0.005991932413599883,-0.37838616192592783,1.0,-0.6066351689398684,-0.945004382969082,0.4820545755917002,0.3698514110301257,0.422829420503656,-0.48631470547755096,0.3395502251764815,-0.5088237189447689,-0.6223094262504667,-0.8188301780923071,-0.10289099401507232,-0.9279616235913211,-0.2786737600582512,0.6337008880747408,0.25678581173007603,0.8861117203791723,0.014454130190799771,0.8754852059938343,0.8240902505058241,-0.8821492586554671,0.437919758244677,0.04612289529343831,0.1513560032931197,-0.5098607475025164,0.14728883532067938,-0.4105721765581563,0.8809279093898824,0.11559596907891388,-0.2058532192940665,0.1379025375772106,-0.5554833048477987,0.4548928142268836,-0.36460552451712497,1.0,-0.5216281555618961,-0.6470365046640145,-0.010882203810033943,0.7522818332347053,-0.9467806445287513,-0.5845595303300036,-0.4559140491139402,0.5281262334690979,1.0,-0.6766152082353707,0.951390548728667,-0.5676129326369994,-1.0,-0.4327807914193447,0.41498214803957484,-0.7513926807949131,0.661495833058527,-0.8682984414361448,-0.8326786239194682,0.4292979556033121,-0.017609585520329887,-0.5049123110621807,-0.5660061469368082,0.9937497075517865,0.5931415474664926,0.05303352626013219,-0.5623279375789495,0.3782328530649547,0.2654053532788884,-0.2104992011310634,-0.37782779731836136,0.17215823410073325,-0.8108251980427037,-0.1258014110717678,-0.2824176061385098,-0.5191669811777639,-0.41447080528846036,0.18911731885657743,-0.902375159626445,0.5296434449088384,-0.37846985405091094,-0.7002299266757505,-0.6302437608029856,1.0,-0.38622861451446255,-0.9131669829441161,-0.6938757890567441,-0.0373510395599938,0.6562756866628509,-0.7548966010048356,0.4462873280025746,0.050287024735877026,0.6625481766916232,0.7476998238293335,0.1827035871875291,0.7585109451680341,0.03376429700777002,0.3132457064531047,0.0976900979349136,-0.12790047852758774,-0.2924006874070283,-0.2238755484510755,-0.22766726545429752,0.10794648221821329,-0.06189276601022771,-0.4375613502305378,0.12092377646422317,-0.05941533159545576,-0.12960422091179855,0.37776932829774723,0.241407034259259,-0.33374015262786233,-0.017408382539839156,-0.14343680492017327,-0.4129618243875601,-0.007904821244789138,0.09734171806195181,0.4442560807731927,-0.3555792936234142,0.3738488862294141};

		weights->Set(w);
		m_scenemgr = new PScene(&m_scenemgr_conf, weights, {2.0f, 1.0f}, {4.0f, 0.4f});

		m_monitor = new PMonitor(2, 2.0f);
		static_cast<PMonitor*>(m_monitor)->f(m_scenemgr);

	}

	void Step(Settings* settings) {
		Test::Step(settings);

		DrawNest(11.0f);
		Draw();

		std::cout<<m_stepCount<<" : <getgoodfood: "<<static_cast<PScene*>(m_scenemgr)->m_nest->GetGoodFoodsCollected()
				<<", getbadfood: "<<static_cast<PScene*>(m_scenemgr)->m_nest->GetBadFoodsCollected()<<">"<<std::endl;
		std::cout<<"Fitness: "<<static_cast<PMonitor*>(m_monitor)->GetFitness()<<std::endl;
	}

	void DrawNest(float a) {
		m_debugDraw.DrawSegment(b2Vec2(-a, -a), b2Vec2(-a, a),
				b2Color(0.8f, 0.8f, 0.8f));
		m_debugDraw.DrawSegment(b2Vec2(-a, a), b2Vec2(a, a),
				b2Color(0.8f, 0.8f, 0.8f));
		m_debugDraw.DrawSegment(b2Vec2(a, a), b2Vec2(a, -a),
				b2Color(0.8f, 0.8f, 0.8f));
		m_debugDraw.DrawSegment(b2Vec2(a, -a), b2Vec2(-a, -a),
				b2Color(0.8f, 0.8f, 0.8f));
	}

	static Test* Create() {
		return new Replay_a2Game_Sample;
	}

	void Draw() {
		b2Vec2 w_v[10];
		//walls
		w_v[3] = b2Vec2(-55, -55);
		w_v[2] = b2Vec2(-50, -55);
		w_v[1] = b2Vec2(-50, 55);
		w_v[0] = b2Vec2(-55, 55);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		w_v[3] = b2Vec2(-55, -55);
		w_v[2] = b2Vec2(55, -55);
		w_v[1] = b2Vec2(55, -50);
		w_v[0] = b2Vec2(-55, -50);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		w_v[3] = b2Vec2(55, -55);
		w_v[2] = b2Vec2(55, 55);
		w_v[1] = b2Vec2(50, 55);
		w_v[0] = b2Vec2(50, -55);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		w_v[3] = b2Vec2(55, 55);
		w_v[2] = b2Vec2(-55, 55);
		w_v[1] = b2Vec2(-55, 50);
		w_v[0] = b2Vec2(55, 50);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		//food area
		w_v[3] = b2Vec2(50, 50);
		w_v[2] = b2Vec2(-50, 50);
		w_v[1] = b2Vec2(-50, -50);
		w_v[0] = b2Vec2(50, -50);
		DrawSolidPolygon(w_v, 4, b2Color(0.7, 0.7, 0.7));

		//nest
		w_v[3] = b2Vec2(12, 12);
		w_v[2] = b2Vec2(-12, 12);
		w_v[1] = b2Vec2(-12, -12);
		w_v[0] = b2Vec2(12, -12);
		DrawSolidPolygon(w_v, 4, b2Color(0.5, 0.5, 0.5));

		//robots
		for(auto robot : static_cast<PScene*>(m_scenemgr)->GetNodesByTag(MAKE_TAG('r', 'o', 'b', 'o'))) {
			b2Body* bd1 = static_cast<PRobot*>(robot)->m_motor[0]->GetBody();
			w_v[0] = bd1->GetWorldPoint(b2Vec2(-0.25, -0.1));
			w_v[1] = bd1->GetWorldPoint(b2Vec2(0.25, -0.1));
			w_v[2] = bd1->GetWorldPoint(b2Vec2(0.25, 0.1));
			w_v[3] = bd1->GetWorldPoint(b2Vec2(-0.25, 0.1));
			DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));
			b2Body* bd2 = static_cast<PRobot*>(robot)->m_motor[1]->GetBody();
			w_v[0] = bd2->GetWorldPoint(b2Vec2(-0.25, -0.1));
			w_v[1] = bd2->GetWorldPoint(b2Vec2(0.25, -0.1));
			w_v[2] = bd2->GetWorldPoint(b2Vec2(0.25, 0.1));
			w_v[3] = bd2->GetWorldPoint(b2Vec2(-0.25, 0.1));
			DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));
			DrawSolidCircle(static_cast<PRobot*>(robot)->GetMainComponent()->GetPosition(), 0.5f, b2Color(0.4,0.6,0.8));
		}

		//obstacles
		for(auto obs : static_cast<PScene*>(m_scenemgr)->GetNodesByTag(MAKE_TAG('o', 'b', 's', 't'))) {
			DrawSolidCircle(static_cast<Block*>(obs)->GetPosition(), 4.0f, b2Color(0.3,0.3,0.35));
		}

		//foods
		for(auto food : static_cast<PScene*>(m_scenemgr)->GetNodesByTag(MAKE_TAG('f', 'o', 'o', 'd'))) {
			auto col = static_cast<Block*>(food)->GetBody()->GetFixtureList()->GetShape()->m_radius > 2.5 ? b2Color(0.2, 0.52, 0.3) : b2Color(0.8, 0.17, 0.17);
			DrawSolidCircle(static_cast<Block*>(food)->GetPosition(), static_cast<Block*>(food)->GetBody()->GetFixtureList()->GetShape()->m_radius, col);
		}
	}
};

void DrawSolidCircle(const b2Vec2& center, float32 radius, const b2Color& color)
{
	const float32 k_segments = 16.0f;
	const float32 k_increment = 2.0f * b2_pi / k_segments;
	float32 theta = 0.0f;
	glEnable(GL_BLEND);
	glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_TRIANGLE_FAN);
	for (int32 i = 0; i < k_segments; ++i)
	{
		b2Vec2 v = center + radius * b2Vec2(cosf(theta), sinf(theta));
		glVertex2f(v.x, v.y);
		theta += k_increment;
	}
	glEnd();
	glDisable(GL_BLEND);

	theta = 0.0f;
	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_LINE_LOOP);
	for (int32 i = 0; i < k_segments; ++i)
	{
		b2Vec2 v = center + radius * b2Vec2(cosf(theta), sinf(theta));
		glVertex2f(v.x, v.y);
		theta += k_increment;
	}
	glEnd();
}

void DrawSolidPolygon(const b2Vec2* vertices, int32 vertexCount, const b2Color& color)
{
	glEnable(GL_BLEND);
	glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_TRIANGLE_FAN);
	for (int32 i = 0; i < vertexCount; ++i)
	{
		glVertex2f(vertices[i].x, vertices[i].y);
	}
	glEnd();
	glDisable(GL_BLEND);

	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_LINE_LOOP);
	for (int32 i = 0; i < vertexCount; ++i)
	{
		glVertex2f(vertices[i].x, vertices[i].y);
	}
	glEnd();
}

void DrawString(int x, int y, const char *string, ...)
{
	char buffer[128];

	va_list arg;
	va_start(arg, string);
	vsprintf(buffer, string, arg);
	va_end(arg);

	glMatrixMode(GL_PROJECTION);
	glPushMatrix();
	glLoadIdentity();
	int w = glutGet(GLUT_WINDOW_WIDTH);
	int h = glutGet(GLUT_WINDOW_HEIGHT);
	gluOrtho2D(0, w, h, 0);
	glMatrixMode(GL_MODELVIEW);
	glPushMatrix();
	glLoadIdentity();

	glColor3f(0.9f, 0.6f, 0.6f);
	glRasterPos2i(x, y);
	int32 length = (int32)strlen(buffer);
	for (int32 i = 0; i < length; ++i)
	{
		glutBitmapCharacter(GLUT_BITMAP_HELVETICA_18, buffer[i]);
	}

	glPopMatrix();
	glMatrixMode(GL_PROJECTION);
	glPopMatrix();
	glMatrixMode(GL_MODELVIEW);
}

void DrawString(const b2Vec2& p, const char *string, ...)
{
	char buffer[128];

	va_list arg;
	va_start(arg, string);
	vsprintf(buffer, string, arg);
	va_end(arg);

	glColor3f(0.5f, 0.9f, 0.5f);
	glRasterPos2f(p.x, p.y);

	int32 length = (int32)strlen(buffer);
	for (int32 i = 0; i < length; ++i)
	{
		glutBitmapCharacter(GLUT_BITMAP_8_BY_13, buffer[i]);
	}

	glPopMatrix();
}

void DrawSegment(const b2Vec2& p1, const b2Vec2& p2, const b2Color& color)
{
	glColor3f(color.r, color.g, color.b);
	glBegin(GL_LINES);
	glVertex2f(p1.x, p1.y);
	glVertex2f(p2.x, p2.y);
	glEnd();
}

#endif /* REPLAY_A2GAME_SAMPLE__H_ */
