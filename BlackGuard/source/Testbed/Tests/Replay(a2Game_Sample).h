/*
 * Replay(a2Game_Sample).h
 *
 *  Created on: Jan 14, 2015
 *      Author: wei
 */

#ifndef REPLAY_A2GAME_SAMPLE__H_
#define REPLAY_A2GAME_SAMPLE__H_

#include <iostream>
#include <fstream>

void Draw();

void DrawSolidCircle(const b2Vec2& center, float32 radius, const b2Color& color);
void DrawSolidPolygon(const b2Vec2* vertices, int32 vertexCount, const b2Color& color);
void DrawString(int x, int y, const char *string, ...);
void DrawString(const b2Vec2& p, const char *string, ...);
void DrawSegment(const b2Vec2& p1, const b2Vec2& p2, const b2Color& color);

class Replay_a2Game_Sample: public Test {
public:

	Replay_a2Game_Sample() {
		ANNWeights* weights = new ANNWeights({28, 20, 2}, {false, true, false}, {false, true, true}, true);

		double w[1022] = {-0.27205026332037063,0.13897792217095947,0.006492980436570072,-0.7922205635902068,0.18093980156389705,0.10566233936308074,0.46548862434786875,-0.6413901587980055,0.8854646499779661,-0.439233455594929,-0.33063465615967125,0.5218580946857165,-0.8805109122017742,0.4887620919935617,-0.04641213347187065,0.9784400526290424,0.23113380309796855,0.24894723644839226,0.8497717151040903,0.3798478634868976,-0.7565454691526629,0.28723715669987376,-0.9499340710041928,-0.6562907058196334,-0.7489479988859826,0.5894508475289691,-0.2349814297693202,0.021627825829698508,-0.6152942949385543,0.2117465937795831,-0.8465149142185123,0.5976226313484557,-0.6599174911041188,0.023500193061362362,0.5695649543356632,0.9794297508055544,0.7567998786979048,-0.8823980125393414,0.9071680437867425,-0.5193306347509666,-0.985409749460794,0.9070764615552279,0.6214859829961645,0.6114216271235371,0.7813221993682111,-0.582958467600756,0.9276909090540383,0.2156834255120512,0.7264437623795116,0.9496387035746576,-0.6367679547417118,0.00536483507310557,0.289993620864812,0.3525181638964094,0.5074423683461159,0.4815817933734032,0.7809330192470187,1.0,0.966469576036192,0.6120555647935273,0.07912353969874164,-0.9141088293929188,0.22310164514486797,1.0,-0.18868659183432004,-0.9634622901146629,-0.5535274681415643,-0.34547490676385695,-0.15556746894088033,0.01294796425421426,-0.030651650802279058,-0.7707220010198017,-0.5652677496156566,0.7242181231996742,-0.15240053898206427,-0.6244764785135243,0.5800181464141835,-0.1803460663021779,0.5729214553507825,-0.329407930375931,1.0,0.39007294987173596,0.058117619927432265,0.7296200094814473,0.7363822301032985,0.11178218739192461,0.14230123362031832,0.8734308638622543,-0.5601180077790692,-0.28139153803010986,0.7329403982756071,0.04746459080849551,-0.759112472131445,0.5586463559433427,-0.18095872751011305,0.4113642165727092,0.6999149054625379,0.026298709340514023,-0.01929543786818042,0.6122113739556728,0.824889895795646,-0.9653295275468925,0.7172789578113883,0.5434302193967581,-0.6220112468239987,0.8244770073974268,-0.865912585311302,-0.3973810294021139,0.4812011123555511,-0.5529784540315112,0.8202670885277974,-0.06159662160489801,0.9323241066255408,-0.9801531355849752,-0.5884971389760575,-0.925798163315092,-0.38307416873366773,0.4697412164001807,-0.014880797947959191,0.7801412226619605,-0.736682245199122,-0.8810249022244767,-0.19347321823442762,0.2948758694154712,-0.18331794168572058,-0.8592958776387509,0.6664352044523936,0.5961914658040374,0.8743690252629706,0.4556470576907985,-0.5708232028830289,0.18321233973853035,0.43293306669461523,0.6400283103335366,0.0370863427583083,0.43455433943389,0.3237545844244364,-0.26013584902123504,-0.24687344612909107,-0.05209185628877666,0.4424292538409084,0.2991201471481002,0.66057874797973,-0.26303010294961915,0.3541684444275861,-0.06557913791080763,-0.8816933852347159,0.5001793548526312,0.42847011384000305,-1.0,0.19700253423267652,0.854574320943497,-0.37035139651634075,-0.17515350889537296,-0.14405812432828774,-0.24224855626778777,0.130346423031976,-0.9095912647795593,0.3044571326259889,-0.6544187787634365,0.40658496517608234,-0.6898077970074485,-0.6232965829661791,0.2801625055447244,-0.07982537866756313,-0.3154394939036743,-0.5655816736482299,0.8756581222037616,-0.2666777930813563,-0.49326923901297987,0.9644102290817239,0.4760892851603673,0.16376640184467772,-0.48515589778416895,-0.03801837302838174,-0.7674078080423776,0.23104220498163697,0.4794712097324226,0.17794131254326379,0.30418079491684297,-0.9098687690331078,0.4483321591023473,0.19632707981389977,0.013224264208464523,0.7751352834197578,-0.7720453044273374,0.4223728068864951,-0.077519327531504,0.8256365064012335,-0.40753835316757353,0.6264879643647199,0.2409938804393965,0.2002348332371048,-0.2508054230637648,-0.021900943061128143,0.6330470754047183,-0.8339095017729563,-0.8459085860439953,0.5206024697134954,-0.10193540472947303,-0.33279392680475267,0.2000664677832131,-0.6984667914832766,0.06499633059762899,0.6647701742862738,-0.4473067065792298,-0.9668358799762938,0.5929452841831457,-0.7731185238148103,0.4955852857450797,-0.7238125707707486,0.9037153599674954,-0.6437171215878932,0.903542822316786,0.22441918287206042,0.21231600771283146,0.07785610817212542,0.3028515693713126,0.20365373009572074,0.24010394036553537,-0.6062143793544157,-0.4335841611747797,0.5703068199379429,-0.9985608153564506,-0.5271356121704759,-0.6770520840222681,0.5137440694794363,-0.5676804393268655,0.8065620871419531,-0.7746866329411224,0.4684312421436366,-0.853766489761296,0.42872605456883683,0.2101410169639982,-0.8561239855599869,0.27288270774519874,0.2687173490777955,-0.7999698210025022,-0.2525859177431775,-0.4963811982323107,0.13813083250815864,-0.6466345172413563,0.9446987534554775,0.5845797950100035,0.7434607416466206,0.11283056526094776,0.28337435308960796,0.0910706785725502,-0.5748954277044781,-0.22515528709427457,-0.5099789526901881,0.17624311514646196,-0.2138145712883733,-0.049203770027167144,0.43626371742962294,0.17723441370440732,-0.5029510211244301,1.0,-0.010337973092076545,-0.8239577564141829,-0.7262112099771262,-0.7882040071510318,-0.21791830800318565,0.982972120404712,0.4849316656028255,-0.8865261332414602,0.9869716300834828,-0.9260148800583354,-0.2810751630042497,0.2283481900859684,-0.9511486502162522,-0.21842859120099625,0.8304801020257826,0.07081032806528162,0.41602902502805894,0.14542963693428484,0.49765743026418957,0.4686119493164502,0.021857155149656464,-0.01129024003138405,0.4772953351608228,0.01679021989553467,0.43444459657260803,-0.3923870552257998,-0.8257108799661032,-0.9795076006543365,-0.48515825313400923,-0.9449797255927482,-0.4727835948273732,-0.6613931605338915,-0.7600301819972495,-0.515155953144506,0.5735981310523546,-0.9729887371149797,-0.4630757187920519,-0.2855665335042604,0.05888414160269484,0.46597897261018784,-0.4209911131034288,0.8417245371767353,0.9533399744891832,0.9584927007979352,0.6452862826700846,0.9256533721339211,0.8995593340251662,0.2514210834962965,0.6758701747216198,-0.3271130639991346,0.3378273023746335,0.897718594372868,-0.677864886395776,-0.0438527383024908,0.8944125660405624,-0.7794601014496932,0.5761309024290364,0.5268761890510159,-0.5765230245703307,-0.307361450165861,0.6434293316710187,-0.10109080252800182,0.7633060891752701,-0.4321753246002549,0.39110329002876554,-0.26429192343572633,-0.988098638413885,-0.6408405345393672,-0.7954254829544449,-0.8237036797723646,-0.9230050848165866,-0.9134856174470747,0.8924011783605652,-0.08662560440307769,0.5152281054051504,-0.5942043073755965,0.3102763257553921,-0.7533067716855685,-0.8360575585269152,0.5457283565035023,-0.35080396034407213,0.11260828413676607,0.523693476755995,0.18308277609151982,-0.42629068471104964,-0.17510134051465354,-0.448462113246516,0.6390019094172923,0.9889530170519234,-0.7585953623723635,0.6370615814698116,0.69762321313926,-0.4272603581138414,0.673118742546385,0.21596024018045498,0.12368765946941838,-1.0,-0.6695808247534714,-0.11320014636839547,0.8553102466808983,0.42474172370888447,-0.07348534885899245,0.32311064396277933,-0.05843047910965674,0.9545233549784659,-0.7458790940787772,0.11919054967518908,-0.5501744580408339,-0.1613600317361427,0.328347366378203,0.18995978198482025,0.3015400201946541,0.5800549704998867,0.5101491807318267,-0.5251634108814331,-0.2578197259587858,-0.0847738949034938,-0.6475307145267248,-0.01702342379523198,-0.3504868493758375,0.5820382588953044,0.6608874340996156,-0.17290712647253456,-0.46060089084369726,-0.7119301931882279,-0.7260350596537742,0.007777946551868682,0.8374903749151865,-0.7068418125172227,-0.9947505596170676,-0.2300951145493042,-0.9196088350656901,-0.5277306684449405,-0.6658906254121318,0.3658464758950985,0.6681252585809878,1.0,0.3492363583332059,0.31871553853001117,0.8829166112744298,0.784530650037949,-0.45924669684274294,-0.1662666467350668,0.2029361376546638,-0.059118693038423424,0.37718656158334884,-0.17497278599723665,-0.3245136519885966,-0.6326320880012775,0.8463094816159634,-1.0,-0.9796213976312605,0.22247484131023548,0.16230695782619137,-0.7248132980960916,0.4518767103437478,-0.23116254511700532,-0.5461851164364913,-0.14140395218457485,0.011308028073684306,0.457196138970802,0.5073586079467998,-0.6169538262189295,-0.504820317267394,-0.44098471605849016,-0.9281603917389127,-0.4615549096745798,-0.33489670543904715,0.24715166990814996,-0.3560537299776123,0.3129494404155434,-0.5641230982350119,-0.8336621100212789,0.6420587209329354,-0.6038058003968468,-0.32222699470843985,-0.6259043515179245,0.6430768438819379,-0.027420461100197163,0.09204258225107492,-0.40652145414494356,-0.29725754793654025,-0.3997683196424963,0.2658695787222026,-0.5830467931567498,0.6395496806474608,-0.29964860712562214,-0.38446391141907066,0.1355068515953364,-0.738241327694068,-0.08261761593068571,0.2929837734158726,0.46947180846755365,-0.7837516152303728,-0.023984941043223535,-0.4877668178840114,-0.20979034172251632,-0.8933648902275583,-0.17408519739600845,0.4699305792968117,0.28968203470975906,0.8184044968099028,0.2662549594761421,-0.2808498301077051,-0.5410084926365858,0.7805061022842421,-0.26433397193829233,0.37463448289372614,-0.5283695972537652,-0.5438851122878774,-0.863873602487544,0.23604267662685818,0.8254332529682172,-0.17364262398658464,-0.20407019542292734,-0.5946472047664264,0.5170241316577098,0.7316907947498927,0.006582384660506235,-0.8820970657441634,0.03676266004437038,-0.1591690947324958,-0.6699901750769284,-1.0,-0.6841337430104748,0.23168247481112833,-0.16047113233053326,0.4463858266102904,-0.9962608574340075,0.11261521543722912,-0.7519390845064329,-0.4919969063926629,-0.26110887083808687,-0.9245774330314388,-0.6504108461051105,0.5092483373333033,0.7361545439432317,0.49579414898177593,0.30427170702430273,0.830159233209914,0.7476069234127843,0.7475511683508093,0.7458688035227431,-0.07385966095777684,0.5339720801091122,0.7542249612236777,0.09342498765569167,-0.8138599441464156,-0.22056724283945175,0.32379047746106565,0.9760400835261923,-1.0,0.9314967354020621,0.820576652619441,0.8064393010153617,0.6607659820982187,-0.972878888078017,-0.16733704047228184,-0.40514188469412016,-0.7452329878947124,-0.6410481949178275,0.07332087854882588,0.8715242038426476,0.9801173084485462,0.6804608572601086,0.9615730828126523,-0.9565064764279978,0.47948908986593186,-0.05415208352693067,0.40098422798259514,-0.6247816859330136,-0.11910358939873947,0.8965590432976546,-0.3656156248719074,-0.6264611463453886,0.9516746594720399,0.6182010988358815,0.7639094160490851,0.14309517902849989,-0.6989336931536184,-0.9247932602594361,0.8971105598327578,-0.8896052310297657,0.3652530258941586,0.2402374906459573,-0.7156316585485436,0.6633601342589023,0.609637684168004,0.9164835152361573,0.32791721240440713,0.9045726291068289,0.6962593343330268,-0.9690060369405957,-0.06212389928963791,-0.9983220810510525,0.33487379574548487,-0.9231473290495995,0.945325313004648,0.8439234550188265,-0.05079639954991364,0.37967886279715457,-0.2731268960904227,-0.002550302938113324,-0.06421371061661273,0.9662280727102402,-0.986872720400299,0.4081669833620961,0.08981258003232204,0.7526695363857854,0.6804681475931472,-0.17474238507926115,-0.8567583877668343,0.9185576664215966,-0.829776070695996,0.2991757302685708,-0.9236486667195082,0.6128150870831927,-0.8867023899930478,0.7700189373936935,0.134245430348977,0.5126504103757713,-0.9983168390336518,0.7757657937440325,0.4245892572274566,-0.7981939189928456,0.8522041006291873,-0.7762318521691811,-0.15683576384627165,0.8944331338350088,-0.10855213758527628,1.0,-0.15788914711612884,0.5598556411473149,-0.05678634568873068,1.0,-0.5849105986277292,-0.8598943668025497,0.30723211765918296,0.5886548534617386,0.9170340195511186,0.0030863364552611095,-0.0907675110273493,-0.6450285919319884,-0.9846512353235612,0.01912916286832226,0.6629412122897921,-0.32491009619428646,-0.473472805999184,-0.5144599820333641,0.5557134019833462,0.1878120793447192,0.10545479845497278,-0.3971357053450702,0.9664072403576277,0.8356955081643175,-0.998616002867941,0.9473963879702509,-0.8828782903808048,0.136540913870697,-0.3419199073918735,-1.0,0.39307553804590717,0.08088977956593803,-0.8407982019722545,0.6875283565480791,-0.9244175088128399,0.14465752375887864,0.8661551574283328,0.8584753840645095,-0.5424004746690582,0.9927437172829988,-0.4299873361790067,0.13864735731646474,-0.420066221465357,0.7141350612828962,0.7034780955220303,-0.005317215944517624,0.035837344879007624,-0.5849821735441142,-0.8476911829264524,-0.6584276921017638,0.44116533976551997,-0.3795716071147965,-0.16777296696290156,0.35306993444569756,0.24088783168347966,-0.07019818434525035,0.049131761763310355,-0.6683888068561612,0.510531917697299,0.0588268768909668,0.7789389056941374,-0.45688173706863044,-0.2146527012855158,0.8058144043009658,-0.23428211741538066,0.7299013871194586,-0.9583203314975596,-0.5261517927588952,0.7107269130470524,0.8213011177137277,0.6710342117096258,-0.680697814214231,0.6867047856048243,-0.6513133917207875,-0.6032521256019288,-0.7796008960848286,0.9490895065489757,0.9106275883964424,0.5908287675276094,0.7190544051107732,0.12209172120397671,-0.45369696412095956,-0.6438070999322125,0.7989711906159599,-0.47287014162509133,0.34842395596242065,0.6792590131746851,-0.9505431462395313,-0.7371595781665722,0.9014866447693868,0.868744441299337,0.3435820459468363,0.7245238698509044,0.9382511044799764,-0.15269567024770364,-0.5445771438457724,0.8809975931815889,-0.6821262426631577,-0.3812802891602228,0.49091950173108606,0.9354977826239828,-0.6506162856342724,0.02237672229095101,-0.8024099897271082,0.24313861743951873,0.8195104505630829,0.7423355654988649,0.9605273757242774,-0.3274727247270512,-0.957728471941399,0.9508739285415224,-0.220739926898844,0.7130590829822433,-0.15011966965764828,-0.8748813214110718,0.24177540378940612,-0.6365800249882336,0.2845492985696902,-1.0,0.759175654582763,0.5100559642341016,0.7666282199707254,-0.16032569691069695,0.9109708712573287,-0.8988712755747321,-0.5711851283209936,-0.18111536520007152,-0.969602225298325,-0.23217971965269613,0.47087782942645107,1.0,1.0,-0.01919536030155744,-0.5610426883675883,-0.8447133698149372,1.0,0.04517443558355578,-0.771675885481542,0.8543929991357939,0.8987378145983183,0.4513556041651903,0.9928558701902882,-0.9452138579781509,-0.7963068617805839,0.9416363586864378,-0.9650921279222332,-0.7622321192243559,0.2340414809416725,-0.390625256778412,0.5768719167500257,-0.20627457052234183,-0.7185535086881224,0.3945644414692827,-0.2665870655712252,-0.8623189415050183,0.5540681444131407,-0.00692121446761231,0.253721155266834,-0.9306280703246443,0.5768549195045324,-0.5319481974562726,0.03019775689338766,-1.0,-0.7322580730557294,0.9475152850664547,0.5884759542304274,-0.5713623103508902,-0.5160092903031267,-0.9667274761419944,0.41629710120671587,-0.39487764090869465,-0.23760374849798338,-0.11084652120892732,0.8988327814328119,-0.560807630910751,-0.11836037096262185,0.11037165358421647,0.415983969425958,0.665731205296154,-0.8878094279318732,0.0649834335022161,-0.4142897649739666,0.015383263925409566,-0.11285129153672625,0.22409698105724424,0.7446855158112078,0.17640209850601038,0.758980665593093,0.8334028454297494,-0.6948847431187243,-0.6521034497765893,-0.4138962321242813,0.7036187734732436,0.0945019786276831,-0.5777518151197912,-0.042444095395415674,0.13467095732807302,0.9662350760158792,-0.12033202995704065,0.8843469129901905,0.7087292116464676,-0.3386218776796478,0.4224961480177605,-0.8924635069523934,-0.742345465762995,0.7835951627129839,0.7106106068289566,-0.1417476618997091,-0.189621204663948,-0.5608387672561278,-0.7190924453980773,-0.08398320279602228,-0.8617191975217109,0.32446142629791364,0.9378099120123836,-0.8793503281309802,1.0,-0.7806049748451347,-0.8357932033464898,-0.3780199295584744,-0.805569160598635,-0.9611475106920385,0.632372442937857,-0.26816865341332574,0.8577334248445119,-0.7729901222807878,-0.21887349136013315,-0.07732136050129042,-0.6700226551930892,0.19104981230527063,0.538075541228659,0.07744729385774982,0.9770435282181863,0.8160382525006157,0.5804662337608356,-0.3901552010425443,-0.5656708476686284,0.13561743883291721,0.8777036003202591,-0.5091170568786388,-0.32342182726069224,-0.20145875058413926,-0.8021391457913207,-0.15335603028340591,-0.16089621504460103,-0.3628814023329565,-0.20054009098589862,0.3935263961508506,0.8956877427362864,-0.38924836152517484,0.9286020175683658,0.44558660974007047,0.2899894868476592,0.3414663732590277,0.9995071722024604,-0.6952455642706526,-0.13824405880916368,0.909612973959815,-0.4402497127900077,0.17494054867406944,-0.9849481699012315,-0.428723309301924,-0.4866824594950365,-0.3246790751242433,0.8037322643111544,-0.5017413213685592,-0.9179249501381275,-0.9671948043340634,0.6347218465789616,-0.4441140930220071,0.5665477558142196,0.7676962599044013,-0.47441043551267675,-0.8726309931085009,0.909997709516071,0.1722936562570768,-0.8703452948790406,0.0345089589649872,0.3955784117034249,0.19928663907155245,0.893447164699674,-0.6083368601897343,0.10569988640736418,-0.740830882084643,-0.5656623286758573,-0.23604154972222838,0.9205885594050646,0.5729209605789619,0.699002373297337,-0.7217145632362739,-0.0537016363055227,-0.4952072206751438,0.6085019293141981,-0.7046001853399542,0.4715201882398319,0.26689278716391857,0.47157560553621364,0.4091774280600948,0.06742333243148546,-0.06350383937111852,-0.598240068443666,1.0,0.17639655567476795,-0.4109372307374678,-0.5259362448041629,-0.657233040249581,-0.4938275525461663,-0.7126717641639008,0.05369491861574398,0.17469822861967527,-0.6363199733611505,0.1867453019931002,0.5417740633981754,0.42360902623573043,0.04492887045446244,-0.7208562901810855,0.4566826244893877,0.699702595534856,-0.30638941195401814,0.8677027105518703,0.8092318964426858,-1.0,0.8912767500556162,-0.4161101697823989,-0.22281508590739516,0.5867502924763992,-0.7367497997036885,-0.19964538878266816,-0.5569134527561097,-0.12629734081571983,-0.979889451981748,0.07552395997161793,0.41937261678993876,-0.04467608589533235,-0.8598941405329029,-0.7028110862799569,0.8792416940114872,0.3134571595434185,0.17960065838532815,0.3283831197963709,0.170013943042561,-0.32194877744511663,0.3054873202163787,0.8057193127604458,0.5311430216760308,0.6786722876007459,0.732465023926962,-0.886605293956377,0.06283115409829962,0.3440151425083148,-0.718995242975298,0.1652123617179805,-0.4009421072872191,-0.8767587791940035,-0.9026728642408665,0.1359372584581522,0.3965524246666837,0.687445672433337,0.6623013302370103,-0.741743880523407,0.04027910622449083,-0.9692794785335086,-0.777703313518077,-0.1540596992091912,-0.86100451767472,-0.33320201578634384,0.5241816942047695,-0.34072301644455844,-0.8153187148962174,-0.5712389256366595,-0.3583683681179406,-0.29500462276107303,0.39635820558530943,-0.9713035218199283,-0.09294227419374192,0.021577360197889812,-0.7136453043025778,-0.58263931748642,0.17634945318697004,-0.128111411542517,0.44188496179377046,0.30908371695108633,-0.11278486479659965,0.8151128704355719,0.0345135800876266,0.907895643035338,-0.08217410086306592,0.5588686242899392,-0.7304768623227718,0.9676731196482569,-0.10764295736521642,0.9304164466980422,0.13901375413098518,0.21131718918129627,0.9997520450252219,0.28704058547402234,0.017341607522684155,0.2112038877669238,0.5518980868758421,-0.8136852080309889,0.21823629500853714,0.43505573716697904,-0.08862166284664048,0.47034954038948745,-0.022010078474765292,-0.04072525428058099,0.289706524438233,-0.23874872767791203,0.19642970279195404,0.6523033911603533,-0.47066177541382037,-0.4583197533969592,0.48921574058924583,-0.3122040688402174,-0.035943443002264194,-0.4229717921870475,-0.1636241277342439,0.45277806791088426,-0.047820141966714844,-0.24125233298537227,0.35200467825135656,0.32297568010986755,-0.21779017017615443,0.47440202961069927,-0.42598141951240065,0.44546253259014107,0.15146680400973966,-0.238510074345857,0.06501386019813976,-0.4619856590030891,0.19272034222922582,-0.41402133848141637,-0.4351135955145326};

		weights->Set(w);
		m_scenemgr = new PScene(&m_scenemgr_conf, weights/*, {2.0f, 1.0f}, {4.0f, 0.4f}*/);

		m_monitor = new PMonitor(1/*, 2.0f*/);
		static_cast<PMonitor*>(m_monitor)->f(m_scenemgr);

	}

	void Step(Settings* settings) {
		Test::Step(settings);

		DrawNest(11.0f);
		Draw();

		std::cout<<m_stepCount<<" : <getgoodfood: "<<static_cast<PScene*>(m_scenemgr)->m_nest->GetGoodFoodsCollected()
				<<", getbadfood: "<<static_cast<PScene*>(m_scenemgr)->m_nest->GetBadFoodsCollected()<<">"<<std::endl;
		std::cout<<"Fitness: "<<static_cast<PMonitor*>(m_monitor)->GetFitness()<<std::endl;
	}

	void DrawNest(float a) {
		m_debugDraw.DrawSegment(b2Vec2(-a, -a), b2Vec2(-a, a),
				b2Color(0.8f, 0.8f, 0.8f));
		m_debugDraw.DrawSegment(b2Vec2(-a, a), b2Vec2(a, a),
				b2Color(0.8f, 0.8f, 0.8f));
		m_debugDraw.DrawSegment(b2Vec2(a, a), b2Vec2(a, -a),
				b2Color(0.8f, 0.8f, 0.8f));
		m_debugDraw.DrawSegment(b2Vec2(a, -a), b2Vec2(-a, -a),
				b2Color(0.8f, 0.8f, 0.8f));
	}

	static Test* Create() {
		return new Replay_a2Game_Sample;
	}

	void Draw() {
		b2Vec2 w_v[10];
		//walls
		w_v[3] = b2Vec2(-55, -55);
		w_v[2] = b2Vec2(-50, -55);
		w_v[1] = b2Vec2(-50, 55);
		w_v[0] = b2Vec2(-55, 55);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		w_v[3] = b2Vec2(-55, -55);
		w_v[2] = b2Vec2(55, -55);
		w_v[1] = b2Vec2(55, -50);
		w_v[0] = b2Vec2(-55, -50);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		w_v[3] = b2Vec2(55, -55);
		w_v[2] = b2Vec2(55, 55);
		w_v[1] = b2Vec2(50, 55);
		w_v[0] = b2Vec2(50, -55);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		w_v[3] = b2Vec2(55, 55);
		w_v[2] = b2Vec2(-55, 55);
		w_v[1] = b2Vec2(-55, 50);
		w_v[0] = b2Vec2(55, 50);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		//food area
		w_v[3] = b2Vec2(50, 50);
		w_v[2] = b2Vec2(-50, 50);
		w_v[1] = b2Vec2(-50, -50);
		w_v[0] = b2Vec2(50, -50);
		DrawSolidPolygon(w_v, 4, b2Color(0.7, 0.7, 0.7));

		//nest
		w_v[3] = b2Vec2(12, 12);
		w_v[2] = b2Vec2(-12, 12);
		w_v[1] = b2Vec2(-12, -12);
		w_v[0] = b2Vec2(12, -12);
		DrawSolidPolygon(w_v, 4, b2Color(0.5, 0.5, 0.5));

		//robots
		for(auto robot : static_cast<PScene*>(m_scenemgr)->GetNodesByTag(MAKE_TAG('r', 'o', 'b', 'o'))) {
			b2Body* bd1 = static_cast<PRobot*>(robot)->m_motor[0]->GetBody();
			w_v[0] = bd1->GetWorldPoint(b2Vec2(-0.25, -0.1));
			w_v[1] = bd1->GetWorldPoint(b2Vec2(0.25, -0.1));
			w_v[2] = bd1->GetWorldPoint(b2Vec2(0.25, 0.1));
			w_v[3] = bd1->GetWorldPoint(b2Vec2(-0.25, 0.1));
			DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));
			b2Body* bd2 = static_cast<PRobot*>(robot)->m_motor[1]->GetBody();
			w_v[0] = bd2->GetWorldPoint(b2Vec2(-0.25, -0.1));
			w_v[1] = bd2->GetWorldPoint(b2Vec2(0.25, -0.1));
			w_v[2] = bd2->GetWorldPoint(b2Vec2(0.25, 0.1));
			w_v[3] = bd2->GetWorldPoint(b2Vec2(-0.25, 0.1));
			DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));
			DrawSolidCircle(static_cast<PRobot*>(robot)->GetMainComponent()->GetPosition(), 0.5f, b2Color(0.4,0.6,0.8));
		}

		//obstacles
		for(auto obs : static_cast<PScene*>(m_scenemgr)->GetNodesByTag(MAKE_TAG('o', 'b', 's', 't'))) {
			DrawSolidCircle(static_cast<Block*>(obs)->GetPosition(), 4.0f, b2Color(0.3,0.3,0.35));
		}

		//foods
		for(auto food : static_cast<PScene*>(m_scenemgr)->GetNodesByTag(MAKE_TAG('f', 'o', 'o', 'd'))) {
			auto col = static_cast<Block*>(food)->GetBody()->GetFixtureList()->GetShape()->m_radius > 2.5 ? b2Color(0.2, 0.52, 0.3) : b2Color(0.8, 0.17, 0.17);
			DrawSolidCircle(static_cast<Block*>(food)->GetPosition(), static_cast<Block*>(food)->GetBody()->GetFixtureList()->GetShape()->m_radius, col);
		}
	}
};

void DrawSolidCircle(const b2Vec2& center, float32 radius, const b2Color& color)
{
	const float32 k_segments = 16.0f;
	const float32 k_increment = 2.0f * b2_pi / k_segments;
	float32 theta = 0.0f;
	glEnable(GL_BLEND);
	glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_TRIANGLE_FAN);
	for (int32 i = 0; i < k_segments; ++i)
	{
		b2Vec2 v = center + radius * b2Vec2(cosf(theta), sinf(theta));
		glVertex2f(v.x, v.y);
		theta += k_increment;
	}
	glEnd();
	glDisable(GL_BLEND);

	theta = 0.0f;
	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_LINE_LOOP);
	for (int32 i = 0; i < k_segments; ++i)
	{
		b2Vec2 v = center + radius * b2Vec2(cosf(theta), sinf(theta));
		glVertex2f(v.x, v.y);
		theta += k_increment;
	}
	glEnd();
}

void DrawSolidPolygon(const b2Vec2* vertices, int32 vertexCount, const b2Color& color)
{
	glEnable(GL_BLEND);
	glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_TRIANGLE_FAN);
	for (int32 i = 0; i < vertexCount; ++i)
	{
		glVertex2f(vertices[i].x, vertices[i].y);
	}
	glEnd();
	glDisable(GL_BLEND);

	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_LINE_LOOP);
	for (int32 i = 0; i < vertexCount; ++i)
	{
		glVertex2f(vertices[i].x, vertices[i].y);
	}
	glEnd();
}

void DrawString(int x, int y, const char *string, ...)
{
	char buffer[128];

	va_list arg;
	va_start(arg, string);
	vsprintf(buffer, string, arg);
	va_end(arg);

	glMatrixMode(GL_PROJECTION);
	glPushMatrix();
	glLoadIdentity();
	int w = glutGet(GLUT_WINDOW_WIDTH);
	int h = glutGet(GLUT_WINDOW_HEIGHT);
	gluOrtho2D(0, w, h, 0);
	glMatrixMode(GL_MODELVIEW);
	glPushMatrix();
	glLoadIdentity();

	glColor3f(0.9f, 0.6f, 0.6f);
	glRasterPos2i(x, y);
	int32 length = (int32)strlen(buffer);
	for (int32 i = 0; i < length; ++i)
	{
		glutBitmapCharacter(GLUT_BITMAP_HELVETICA_18, buffer[i]);
	}

	glPopMatrix();
	glMatrixMode(GL_PROJECTION);
	glPopMatrix();
	glMatrixMode(GL_MODELVIEW);
}

void DrawString(const b2Vec2& p, const char *string, ...)
{
	char buffer[128];

	va_list arg;
	va_start(arg, string);
	vsprintf(buffer, string, arg);
	va_end(arg);

	glColor3f(0.5f, 0.9f, 0.5f);
	glRasterPos2f(p.x, p.y);

	int32 length = (int32)strlen(buffer);
	for (int32 i = 0; i < length; ++i)
	{
		glutBitmapCharacter(GLUT_BITMAP_8_BY_13, buffer[i]);
	}

	glPopMatrix();
}

void DrawSegment(const b2Vec2& p1, const b2Vec2& p2, const b2Color& color)
{
	glColor3f(color.r, color.g, color.b);
	glBegin(GL_LINES);
	glVertex2f(p1.x, p1.y);
	glVertex2f(p2.x, p2.y);
	glEnd();
}

#endif /* REPLAY_A2GAME_SAMPLE__H_ */
