/*
 * Replay(a2Game_Sample).h
 *
 *  Created on: Jan 14, 2015
 *      Author: wei
 */

#ifndef REPLAY_A2GAME_SAMPLE__H_
#define REPLAY_A2GAME_SAMPLE__H_

#include <iostream>
#include <fstream>

void Draw();

void DrawSolidCircle(const b2Vec2& center, float32 radius, const b2Color& color);
void DrawSolidPolygon(const b2Vec2* vertices, int32 vertexCount, const b2Color& color);
void DrawString(int x, int y, const char *string, ...);
void DrawString(const b2Vec2& p, const char *string, ...);
void DrawSegment(const b2Vec2& p1, const b2Vec2& p2, const b2Color& color);

class Replay_a2Game_Sample: public Test {
public:

	Replay_a2Game_Sample() {
		ANNWeights* weights = new ANNWeights({28, 20, 2}, {false, true, false}, {false, true, true}, true);

		double w[1022] = {-0.7944301388881877,0.42891962913944687,-0.8141296481907307,0.7637549199025101,0.3310610916889403,-0.3231228249341226,-0.12784289044340136,-0.12487311864858985,0.7785625884349802,-0.624788911482088,-0.273954909462369,-0.05014275011797484,-0.14994421631336247,0.6742607113164865,-0.8276277325067026,-0.10007735913902789,0.08701473617339205,-0.46525707201409855,-0.8903886366102142,0.54398206406742,0.06268144575633416,0.20755897491076375,-0.5679362627795429,-0.7343358036507077,-0.17581176261704684,0.422512983360659,0.12185298638690996,-0.21279710750042438,0.8619243873709882,0.669047727567693,0.5124510867052381,-0.10731513226593345,0.6407371646344624,-0.4357608559750777,0.6381859967943158,0.08834672041644248,-0.333222917867166,-0.7871243310987278,0.5284609521683522,0.9768614162910748,-0.6898715746503765,0.2659030667305387,0.5905849214662707,0.45114566506923737,0.8099880019871644,-0.902585093002966,0.7939780246007173,0.04898373233184769,-0.22619597009453124,-0.198327521360156,-0.8596147587411354,-0.8244329523100926,-0.6945213129610737,0.7026512027572961,-0.7402080680130272,0.2700681833723775,-0.23841075355965574,-0.4300086162892733,0.4018870167086793,-0.028940539187139926,-0.8162144513220327,-1.0,0.4708600916347429,0.04551311767602054,-0.3775444488980353,-0.05439419304820734,0.7482474611421847,-0.3119065179164799,-0.6567115884894406,0.48550177486001367,0.8523695261941986,-0.2570657737930408,0.8912694055315888,-0.6714491115938032,0.5563041558210318,1.0,-0.009109019611827286,0.5392885625422988,-0.1674415851686587,-0.9018176607259425,0.8483620009391477,-0.8067196946524621,-0.1733774021523546,-0.22785268750515317,0.2798611318683672,0.9406543360264745,0.6514461911556971,0.11388899575201336,-0.4839329769764289,0.43667972764305896,-0.1349050313022373,-1.0,-0.039871737482967684,-0.580444909457915,0.2691044057027075,-0.43009165724166626,-0.7522731990539983,-0.6526664425825661,0.08026245767260566,-0.993400705340621,0.1098842335273673,0.8478824616083367,-0.8047266151359788,1.0,-0.45226595826598287,0.7029650518013507,0.8016790078976689,0.0068150094344418865,-0.4731042286013154,-0.9147225538037488,1.0,0.8106643408364158,0.45167178598124924,0.01901074818704919,0.5971180709994239,-0.6356643926952694,-0.23454141262295533,0.6649167497067545,0.7060911874298161,0.5099582626284428,0.3419353667530049,-0.6475268297306483,0.1183307164451289,-0.013890251390014319,-0.09513283650469875,-0.5888052503341971,0.6006451566472262,0.9847425416733749,-0.9166508690378142,-0.6848721191379876,-0.2331088530031515,0.08448247149365502,0.6824174429832373,0.7478396409408241,-0.8700630874239446,0.3723100876387835,-0.48407872992100637,0.39344243184176225,0.3239850685206415,0.10609385817321848,-0.8443173754022654,-0.22750728878669924,0.48774415839805235,0.6880320708243584,-0.9066911338021941,-0.6024440417677815,0.34408552450520724,0.9549543925926672,-0.9386616424700023,-0.22171981082845757,-0.838122520748991,-0.4052135465286616,-0.28427161665058565,0.4443100462776901,-0.39904655005777,0.5485744907719842,0.8513891467733161,-0.5715342742631786,-0.1631317086740808,-0.8764616261552545,-0.6239853194911419,-0.2814323317987079,0.5464563371576754,-1.0,0.9688456259049764,0.47226985304750596,-0.01331264350170995,0.0021400165729450727,-0.17063945658285684,0.25567885019252107,0.9908154986487928,0.9285280542648052,0.39561155782307583,0.7813463354031168,0.6350005506516994,-0.28204508345765084,0.0061622108860791835,-0.5268931456166448,-0.6977856323541636,0.7479956018329144,-0.6210048523323719,0.04693857831229011,0.12038068779987024,-0.555694278825364,-0.5951044916399825,-0.05951311778830687,0.6945123450354157,0.6461497867856185,-0.06997317624935065,-0.5220432827308703,-0.8515979669229301,-0.4835739576206793,0.4628970287838683,0.723701127615194,-0.10692804971393562,-0.003615764664397587,0.204347336519532,-0.899778473114504,-0.43932378750322054,-0.8375607813274843,0.6131769128993946,0.3945378993814934,-0.23353146840590702,0.5848611847328095,0.05069043885217394,-0.34815719336538836,-0.7605933707039993,-0.2674762458037784,0.5644759129089085,0.7841297662026103,0.9487617016503676,0.07480291396662407,0.6959040469789135,-0.726879174479524,-0.10675852916881709,0.08789744886809013,0.7122355047928662,0.20266714926864374,-0.7479159164279843,-0.35007885826870166,0.9572545796132802,0.42268698593779314,0.23488518207520456,-0.16810568881089377,0.8486232999971777,0.19048663529801377,1.0,0.7506041847505368,0.9426226852290246,0.42468592003399835,-0.3294227227785697,-0.7608620518396209,-0.3599321566401194,1.0,0.12235170604557331,-0.3112709475616043,0.8224692302723663,0.8966545846124235,0.5026565645395612,-0.9617575635048148,-0.04463027381765008,-0.5007343749013174,-0.10281671314241553,0.44085188713611523,0.8195620149224274,0.13925647940333077,1.0,-0.9164179554775255,0.9233095533944847,0.8381790873001415,0.5609573926939591,-0.6265010515252288,0.7166744602024722,-0.966432079129049,-0.018523996378456944,-0.32288558004433954,-0.045878274011681895,-0.21638318303103596,-0.3773509296239738,-0.6700492727663485,0.4293884645546018,-0.9775994831200698,-0.40807797351231934,-0.28897113181020595,1.0,-0.8301983036188991,0.46224787481275176,-0.4956935770062042,-0.23301505612652568,0.1265384212388727,-0.6901650235150532,0.08468099230548817,0.5601477371158871,-0.11180120189648646,0.70519038467602,0.23819778126432925,0.43298992468974373,-0.42517861936868145,-0.5674257818880817,0.7555350538199153,-0.9991587892337224,0.3880694000722779,0.8962167051311505,0.8642043402530094,-0.9894152255402925,0.9854220678206971,-0.4621878966431955,0.8229886875576393,-0.8159159973904666,0.982684022611989,0.985106342692131,-0.5345310820150633,-0.7360806350589514,-0.6088484040147583,0.8959404087539586,-0.873489846832574,-0.874898118729745,-0.45894090483426153,0.5141047135286503,0.9953332393010087,0.27757128221469085,-0.6881737110095653,-0.09242684500040155,-0.8858021849450334,-0.14140527374259484,-0.8204314177464527,0.9958919734106071,0.27803634798319965,-0.5860633782879803,0.642461271068006,-0.9863956866634201,-0.9409369854403703,0.16807464172151887,0.9343310014998637,-0.7412983955314771,0.9945733843248078,-0.9607294996287089,0.8025431758904805,-0.9718186003457313,-0.9678665781576288,0.3302480859017986,0.6061443876641507,-0.9343971905449082,0.11603477601720957,-1.0,0.7837735552491615,-0.19084164738587747,0.7347753545681995,-0.33350055165288295,0.6839087106306043,0.9186750033072799,0.9230934270988609,0.8768922571605902,-0.8795079903670205,0.993625252311916,-0.9354882003218085,0.11683666783894169,0.5810143314285026,0.715940570820931,0.9230930242454137,0.710210423835747,-0.4875918429587461,0.5787239535057641,-0.41257736531532546,-0.38877097480558215,-0.13189567516515094,-0.4297699174781675,0.21757984160851634,-0.8407293858513722,-0.873281643083999,0.4415718731606644,0.986464953532392,0.024299295704029417,-0.333557759973788,-1.0,-0.7217742861036843,-0.3494192702803153,-0.2053126651890017,0.6436524194708204,-0.6544868604915421,0.07916252590614326,-0.41490360379415747,0.7330875732127893,-0.28185588067236755,0.18857213702857994,0.3895070442045959,0.4902283469442812,-0.03883683956905978,-0.18824779183309437,0.5000963644797054,0.7551589623549727,-0.19582536224472016,0.06438913745437937,-0.41221681181574277,-0.8140805074288171,0.46079334507545683,-0.9178678670967338,0.40332781870519324,0.5962372051496325,0.20145311655369336,-0.8208955607650064,0.26596877650222844,-0.1288103036952395,-0.795504304995776,0.08022568597211378,-0.1791999366036226,0.2127647401762872,-0.3198914338839495,-0.1980245722167687,-0.8392674044400986,0.9137333550477377,-0.8081163044356905,-0.9062015329684094,-0.702694558705856,-0.024982138464297927,0.42210248529334865,0.4561029903034041,-0.5796519370801926,-0.6462220324785147,0.645546496749786,-0.027091856741732374,-0.5376188917990264,0.6041507321200815,-0.5549425052603694,0.06049348267530963,0.7457505303299901,-0.3621012489022377,0.7379332803466746,-0.2849093958211101,0.9856493964114713,0.6613693238125506,0.744261481398855,0.7227600766904789,0.6676929880681581,0.9067853940351359,0.7266487793197488,-0.6870253997183521,0.43353795792919286,0.4732265245275539,0.8479573457367748,0.8932985412022713,0.09924533509711642,0.9360108753089694,-0.32904053650422366,0.3605865134257846,0.4175486351886386,0.4600314869908235,0.927228163737729,-0.41441706666007705,-0.48174387460752155,-0.4265406598608925,-0.8947750049422106,0.9469199381416618,-0.42297281247638857,-0.8483005526683742,-0.14448278643997392,0.6058406376872398,0.33629134930208116,0.46327756060121994,0.6006617093284572,0.2653675938499345,0.1922017839974474,-0.8807389887720024,-0.43365189278085436,0.1331385717932346,-0.270342737275938,0.4944628102752674,0.04204264910159062,0.2778552292119771,0.3454396092307031,-0.4419790413739231,-0.30149278871688173,-0.07125290999375156,0.9112368389736639,-0.25335869027372543,-0.9183228441745088,0.1962730257483935,-0.8243462044595008,-0.028627645278716606,1.0,-0.966187674414827,-0.5522895269546798,0.3955718529812932,0.7390083055477052,-0.3801494471033271,-0.8940290470084954,0.01169373469015704,0.891815289359044,-0.45480010609188876,-0.9374540767325554,0.056225705149783575,0.8349810619539416,0.04610746669478334,0.8246875569665766,0.803436696472661,0.2921736062079595,0.2182724850019231,-0.06282738945809684,0.4746975122327349,-0.28776517476195795,-0.5124063877143837,0.470971084029632,-0.17629184663823408,0.6745427935377348,-0.7763227437616013,-0.05357039129681014,-0.0770939009631374,-0.7747045929365824,-0.6275930972731438,0.2504015612639134,0.7823099803277329,-0.295794615580208,-0.99607114347627,-0.13800676390576433,-0.7503967031952321,-0.7992609305000524,-0.7429743999998909,-0.756544443234705,0.15715313775629608,0.010547748589531204,0.5185863429776771,1.0,0.6631832356484272,0.6344460002044048,0.25015023072847753,-0.23875815251710647,0.2860890237095579,0.28138625111194593,-0.025248654400933684,0.45897550862054637,0.5427717842583959,0.5913081341290151,-0.8387264855535709,-0.11038590830391604,-0.8870592896897955,-0.9589918198443735,-0.6051480092287024,-0.721055049781049,-1.0,-0.9667968747207121,-0.6448750262974701,0.33138082496548926,0.07881454573172751,-0.1662458040303192,0.031302674810947916,0.23524606824762806,-0.7814801209011467,-0.9931845766142042,-1.0,-0.890375252200318,-0.389016715143743,-0.33343086691769325,-0.4798480944765348,0.6484435272890056,0.713178656027095,-0.8344161315900744,-0.6748074399084515,-0.9350385209460521,0.19972638798838577,-0.32327814423958934,-0.7412909871845899,-0.11535856886572997,0.47503078797023357,-0.3187534258830199,0.8945313731970683,0.3647435476316323,-1.0,-0.2137324030465995,-0.29997203555527197,-0.3491852988620939,-0.7056282832097074,-0.9388122926410033,-0.8960395799823506,0.31190100076947536,-0.9630879072838506,0.9425479342793557,-0.665841901399009,0.6216122090053611,-0.07853196362018332,-1.0,0.040732283175508505,-0.8553044913637557,-0.8714750916149834,0.7032933474704708,0.48583473394994386,-0.08224839187918696,-0.1533177486806145,0.0823434131601431,0.6188690487884568,0.3092399956398893,-0.8474987168677377,0.6254417034836074,0.37333516454555365,0.9940358109284385,-0.031070339002344648,0.8635671382856154,-0.7618319441223189,-0.8808884227050888,0.38325850212635376,-0.170606516543839,-0.8769208784750755,0.2691939729799425,-0.5565441519308789,0.8943527565691493,-0.38946009027049716,-0.7295766140819125,0.9670136461844854,0.4183472174359849,-0.910133683596994,0.09585973612927338,0.5412101939615026,-0.6202059289802453,-0.2004171604864634,-0.9434977622962514,0.7495224672414721,-0.6331825134798265,-0.23229598087495903,0.7827529164226521,-0.834295745614387,0.486567728840424,-0.44147658538407036,0.9436921991730647,1.0,0.35622186544506734,-0.9392348412984719,-0.8579217955021844,0.676787969644122,0.1930233936702789,0.05174631184657123,-0.6128892708160901,-1.0,-0.5375104589743909,0.4787771219710823,-0.4284537447729295,0.774092823394528,-0.2894784969575761,-0.2921674785736998,0.9287390041725955,-0.638547190677732,-0.7324682266099489,-0.5240195386016869,-0.5550704703551187,0.09868606122465498,0.4205108363408654,-0.9359001858266618,-0.5076072268058982,-0.1765899401401665,-0.2942228927276528,-0.18044443864102963,-0.9445314770091523,0.7434547408756279,0.4643951474222083,-0.5986257114610082,0.7067039189931686,-0.2609343872782333,0.5756628312571742,0.8493762354726196,0.30185699704199664,0.4568158784788736,0.020677135648184637,0.8977768046743783,0.7326165174275514,-0.005278325841236241,0.23244306244239885,0.4059053268946057,-0.6066955227870126,0.9738815710224556,-0.12144443556840671,-0.0955820538755076,0.14233671301464346,-0.9061185069107828,0.156975972761126,0.843777903182023,-0.4963509788435439,0.3539946698490928,-0.488709413093371,0.7451533556931746,0.2599446746488253,-0.6453115752796806,-0.8673528588863358,0.06671413193589268,0.8017296844790934,-0.3119472028715776,-0.4774378574270149,-0.008048871463367413,-0.017904116288428987,-0.785913291429158,0.35190820260413697,0.27090482078248035,-0.9193328902140147,0.9546013709510054,-0.7260236992351202,0.05234529928893813,-0.8791662521577036,-1.0,1.0,-0.8737580317377504,0.30186891408834066,0.14008228055585675,0.6969175185852721,0.8929822221317515,-0.8757090289502645,-0.5602111035920119,0.6603537171500722,-0.3869618045905615,-0.9987535400619495,0.8367430087795311,-0.4711933906800061,0.01481150017522248,0.9213420770791183,0.0759424926007545,-0.1539562369010173,-0.44911410580543343,0.470104963055907,0.5477150884018449,0.7461397992465674,-0.9935531380054329,0.8681638122502349,-0.8763223711352128,-0.6583712051365962,0.8392785436800598,-0.1502912690145492,0.7584763321242836,-0.1425627448028594,-0.17066812685450683,-0.9171703995601601,-0.5670787204449738,-0.7024691712220417,-0.3526538348023078,0.8095270378641293,0.8701758880899834,0.9710420124979775,0.6845252117334092,-0.49126634653738693,0.9420277793210726,0.056879819286617624,-0.4801650645664291,-0.29120637948810574,0.11665878099771844,0.12078238627604447,0.639450284452775,-0.5379017928510673,0.1479734515117895,0.8898876354563826,0.10099117940391232,-0.18706776180027934,-0.9397759653379275,-0.8532997587982821,-0.4493905202917929,-0.4968065175623531,-0.41516501991784727,0.3176489634423327,0.25342177309554015,0.31402675260702123,0.4655715469979196,-0.1530574055345656,-0.6506992589377534,-0.33602422128736864,-0.16353311015931182,0.625600623861739,-0.3328402737719014,0.3631645886781323,-0.3167824275503745,0.9893074052837307,0.09984025788475209,0.07508974025532791,0.1539648494260727,0.6012475982779327,-0.34348955448399193,-0.6565355043829779,0.9547442308400318,-0.8820541970182145,-0.04369812525518615,-0.43029178549047853,1.0,0.6613211078553763,0.753364565731045,0.5009898282597561,0.26965966813678127,-0.11096516610974315,-0.2837565599496495,-0.04645654030697631,0.02686370682787371,-0.9080435743263743,0.12514434226931517,0.9574096351636951,-0.5443634638799406,-0.40088289336924476,0.6023212598265858,0.30197636511417203,0.5262221052632459,-0.7279146963822182,-1.0,0.5783518722797331,0.31299796018389486,0.39767507005308456,-0.6087570017200371,-0.7050745299674832,-0.6535637060479347,-0.2878033356640822,0.9359159316794881,-0.38803590923300985,0.3073654142467661,0.8599680149516408,-0.3081971687872359,0.9620017561891141,-0.381535920433779,-0.24567345868332852,0.2576471359902093,-0.22298970988936695,-0.23217934912639376,0.04460897359595743,-0.5698457435902337,-0.43257211314337185,0.9231567650912702,0.8325499128013744,0.820135779738767,0.5820081598353632,0.5274174984296252,0.7468131693645947,0.8607063733260766,0.4963139582878039,-0.634126479138332,0.9057640209495472,-0.3419740736243144,-0.2774424505480638,0.820543648207513,-0.3486785419514218,0.2940533360249433,-0.21834708343950196,0.6078927606536945,0.7394482302998835,-0.831783294421586,-0.8265284065153523,0.5431122497665398,-0.2516731118092313,0.8936897857097464,-0.7352758314498188,0.901079211699548,-0.3741734936620478,-0.7286767086677591,0.17070601272033128,-0.14143695212704763,0.6145785398232831,-0.6467334313858131,-0.7196245978074984,-0.1474245910391188,0.7623763481412827,0.5859899448627545,0.49823506606533685,0.6358062419531737,-0.984677210958903,0.027669563357833812,-0.3602312632380952,0.24508727832588612,0.06792972989451099,0.47794773778215593,-0.726222981681806,0.8123235410208545,-0.07635767080317492,-0.5892770461802573,0.8711001112571306,-0.5401067918571274,0.8400311243138049,-0.46209847009850885,0.07673352808894258,-0.9479088760240194,-0.5010036265950842,0.19826650479314195,0.7197783481938016,-0.40799372239350096,0.49166268219079395,-0.6678044721430152,0.39724125095249085,0.19294847846265756,-0.8673160396266322,-0.5646069048182896,-0.2976800195645477,0.1589728956703209,-0.5492176191397546,0.6973792685933531,-0.1911712586234457,0.11525077500384256,0.8171543168390505,-0.8212634652654303,-0.05755543792373306,-0.5868497522736014,-0.6340823433608076,0.1520017055631958,-0.04016053896500115,-0.5050868794807303,-0.7397820923393438,0.3248045665495607,0.6808738255628473,-0.15544388567232242,0.7981388894408024,-0.6573254971951562,-0.7795968338123881,0.9660845202847181,-0.8272285378728101,-0.27575812415707224,0.08476180971112686,-0.9155200986651874,0.9391400359617015,-0.322349318707093,0.7954823603207462,-0.30366768953646234,-0.7564859327859368,1.0,-0.7711376458019393,0.7658976831302249,0.36273530336690185,0.8297265665699093,0.2574397583191203,-0.23778557344150852,0.7745776974605104,-0.8448277071829775,-0.7698394848763593,-0.5533174754751069,0.0023720579752495863,-0.8556295397624333,-0.5904506240709403,0.8014112512789572,0.6663048375849266,0.7163617193655736,-0.44713705284368277,-0.053729697833510705,-0.5781337090450129,0.3850253924118984,-0.9762426211565791,-0.5726790366519572,0.11015500688971316,-0.3835694883470275,0.5590615190989092,0.762819773994519,-0.990102899449586,0.679926643767436,0.38092165922346444,-0.5641643188664435,-0.3647808330990442,-0.08229062375924898,-0.6680239401180114,0.9254365724594397,-0.08377818089906558,0.0037963187417221255,0.9890988841554047,0.40830027153659487,-0.07206740147946955,-0.32836087368808586,-0.705147142649546,0.27932228777635615,0.7634870507443837,-0.951221609436522,0.1773422262170637,0.42444915722395177,-0.1689362083793253,-0.5278726823320478,-0.024890525642487393,0.740708671256233,0.25102416624461094,0.38251450587010605,0.970423934698726,0.101948007758011,-0.9186861629354226,-0.18423462924966028,-0.6221632486888483,0.43007767321321205,-0.39274713239576486,0.8565957101443311,0.5902125160344595,0.6745840636489194,0.7304153550249788,-0.7616282940011703,0.6872623242026448,0.29162333333304186,-0.8458780498487982,0.9426493879982336,-0.7920783519235579,-0.7485073462549773,0.9509462771390246,-0.45870703804390783,-0.10719048312576829,0.8043348057512858,0.5260753910582391,-0.5249530400254303,0.4492370655807217,0.43995030318894185,-0.35648920385321997,-0.01602435993023036,-0.8486409126092804,0.06805483968406342,0.03259985852920833,-0.6834095133808102,-0.1977324040527766,0.12750330706871957,0.22339946778135455,0.2624597635363476,-0.7827262549015328,-0.19619830812147968,-0.027791152346181243,0.4292921240746282,0.5844247512238113,0.4979288599805008,0.2884142355468765,-0.23975180259489604,0.08321477569532842,-0.20897644900829965,0.40360609574043543,0.556855400065254,-0.39090748866276087,0.3079126374578109,-0.2079780487394408,0.23218068532606445,0.9027338453543711,-0.26754010708906256,-0.22023083106833172,-0.28587292197415254,-0.8922405133883541,-0.6862290544312664,-0.7432269851194763,-0.48813233290282515,0.24251769777437326,0.35434369521637343,0.3901563383542003,0.04376041848872633,-0.2210316040073674,-0.18709694556606837,-0.29311731652392753,0.12178387581903567,-0.3971223495069247,-0.09009134352790653,-0.052335317574831425,0.16234874488604942,0.30236700128322336,-0.03626544182661421,0.4988611260396805,0.20803984754374244,0.3718631602472274,0.1233887559173098,0.1567873566305209,0.05724339456378316,-0.02770149810514967};

		weights->Set(w);
		m_scenemgr = new PScene(&m_scenemgr_conf, weights, {2.0f, 1.0f}, {4.0f, 0.4f});

		m_monitor = new PMonitor(2, 2.0f);
		static_cast<PMonitor*>(m_monitor)->f(m_scenemgr);

	}

	void Step(Settings* settings) {
		Test::Step(settings);

		DrawNest(11.0f);
		Draw();

		std::cout<<m_stepCount<<" : <getgoodfood: "<<static_cast<PScene*>(m_scenemgr)->m_nest->GetGoodFoodsCollected()
				<<", getbadfood: "<<static_cast<PScene*>(m_scenemgr)->m_nest->GetBadFoodsCollected()<<">"<<std::endl;
		std::cout<<"Fitness: "<<static_cast<PMonitor*>(m_monitor)->GetFitness()<<std::endl;
	}

	void DrawNest(float a) {
		m_debugDraw.DrawSegment(b2Vec2(-a, -a), b2Vec2(-a, a),
				b2Color(0.8f, 0.8f, 0.8f));
		m_debugDraw.DrawSegment(b2Vec2(-a, a), b2Vec2(a, a),
				b2Color(0.8f, 0.8f, 0.8f));
		m_debugDraw.DrawSegment(b2Vec2(a, a), b2Vec2(a, -a),
				b2Color(0.8f, 0.8f, 0.8f));
		m_debugDraw.DrawSegment(b2Vec2(a, -a), b2Vec2(-a, -a),
				b2Color(0.8f, 0.8f, 0.8f));
	}

	static Test* Create() {
		return new Replay_a2Game_Sample;
	}

	void Draw() {
		b2Vec2 w_v[10];
		//walls
		w_v[3] = b2Vec2(-55, -55);
		w_v[2] = b2Vec2(-50, -55);
		w_v[1] = b2Vec2(-50, 55);
		w_v[0] = b2Vec2(-55, 55);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		w_v[3] = b2Vec2(-55, -55);
		w_v[2] = b2Vec2(55, -55);
		w_v[1] = b2Vec2(55, -50);
		w_v[0] = b2Vec2(-55, -50);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		w_v[3] = b2Vec2(55, -55);
		w_v[2] = b2Vec2(55, 55);
		w_v[1] = b2Vec2(50, 55);
		w_v[0] = b2Vec2(50, -55);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		w_v[3] = b2Vec2(55, 55);
		w_v[2] = b2Vec2(-55, 55);
		w_v[1] = b2Vec2(-55, 50);
		w_v[0] = b2Vec2(55, 50);
		DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));

		//food area
		w_v[3] = b2Vec2(50, 50);
		w_v[2] = b2Vec2(-50, 50);
		w_v[1] = b2Vec2(-50, -50);
		w_v[0] = b2Vec2(50, -50);
		DrawSolidPolygon(w_v, 4, b2Color(0.7, 0.7, 0.7));

		//nest
		w_v[3] = b2Vec2(12, 12);
		w_v[2] = b2Vec2(-12, 12);
		w_v[1] = b2Vec2(-12, -12);
		w_v[0] = b2Vec2(12, -12);
		DrawSolidPolygon(w_v, 4, b2Color(0.5, 0.5, 0.5));

		//robots
		for(auto robot : static_cast<PScene*>(m_scenemgr)->GetNodesByTag(MAKE_TAG('r', 'o', 'b', 'o'))) {
			b2Body* bd1 = static_cast<PRobot*>(robot)->m_motor[0]->GetBody();
			w_v[0] = bd1->GetWorldPoint(b2Vec2(-0.25, -0.1));
			w_v[1] = bd1->GetWorldPoint(b2Vec2(0.25, -0.1));
			w_v[2] = bd1->GetWorldPoint(b2Vec2(0.25, 0.1));
			w_v[3] = bd1->GetWorldPoint(b2Vec2(-0.25, 0.1));
			DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));
			b2Body* bd2 = static_cast<PRobot*>(robot)->m_motor[1]->GetBody();
			w_v[0] = bd2->GetWorldPoint(b2Vec2(-0.25, -0.1));
			w_v[1] = bd2->GetWorldPoint(b2Vec2(0.25, -0.1));
			w_v[2] = bd2->GetWorldPoint(b2Vec2(0.25, 0.1));
			w_v[3] = bd2->GetWorldPoint(b2Vec2(-0.25, 0.1));
			DrawSolidPolygon(w_v, 4, b2Color(0.2, 0.2, 0.2));
			DrawSolidCircle(static_cast<PRobot*>(robot)->GetMainComponent()->GetPosition(), 0.5f, b2Color(0.4,0.6,0.8));
		}

		//obstacles
		for(auto obs : static_cast<PScene*>(m_scenemgr)->GetNodesByTag(MAKE_TAG('o', 'b', 's', 't'))) {
			DrawSolidCircle(static_cast<Block*>(obs)->GetPosition(), 4.0f, b2Color(0.3,0.3,0.35));
		}

		//foods
		for(auto food : static_cast<PScene*>(m_scenemgr)->GetNodesByTag(MAKE_TAG('f', 'o', 'o', 'd'))) {
			auto col = static_cast<Block*>(food)->GetBody()->GetFixtureList()->GetShape()->m_radius > 2.5 ? b2Color(0.2, 0.52, 0.3) : b2Color(0.8, 0.17, 0.17);
			DrawSolidCircle(static_cast<Block*>(food)->GetPosition(), static_cast<Block*>(food)->GetBody()->GetFixtureList()->GetShape()->m_radius, col);
		}
	}
};

void DrawSolidCircle(const b2Vec2& center, float32 radius, const b2Color& color)
{
	const float32 k_segments = 16.0f;
	const float32 k_increment = 2.0f * b2_pi / k_segments;
	float32 theta = 0.0f;
	glEnable(GL_BLEND);
	glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_TRIANGLE_FAN);
	for (int32 i = 0; i < k_segments; ++i)
	{
		b2Vec2 v = center + radius * b2Vec2(cosf(theta), sinf(theta));
		glVertex2f(v.x, v.y);
		theta += k_increment;
	}
	glEnd();
	glDisable(GL_BLEND);

	theta = 0.0f;
	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_LINE_LOOP);
	for (int32 i = 0; i < k_segments; ++i)
	{
		b2Vec2 v = center + radius * b2Vec2(cosf(theta), sinf(theta));
		glVertex2f(v.x, v.y);
		theta += k_increment;
	}
	glEnd();
}

void DrawSolidPolygon(const b2Vec2* vertices, int32 vertexCount, const b2Color& color)
{
	glEnable(GL_BLEND);
	glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_TRIANGLE_FAN);
	for (int32 i = 0; i < vertexCount; ++i)
	{
		glVertex2f(vertices[i].x, vertices[i].y);
	}
	glEnd();
	glDisable(GL_BLEND);

	glColor4f(color.r, color.g, color.b, 1);
	glBegin(GL_LINE_LOOP);
	for (int32 i = 0; i < vertexCount; ++i)
	{
		glVertex2f(vertices[i].x, vertices[i].y);
	}
	glEnd();
}

void DrawString(int x, int y, const char *string, ...)
{
	char buffer[128];

	va_list arg;
	va_start(arg, string);
	vsprintf(buffer, string, arg);
	va_end(arg);

	glMatrixMode(GL_PROJECTION);
	glPushMatrix();
	glLoadIdentity();
	int w = glutGet(GLUT_WINDOW_WIDTH);
	int h = glutGet(GLUT_WINDOW_HEIGHT);
	gluOrtho2D(0, w, h, 0);
	glMatrixMode(GL_MODELVIEW);
	glPushMatrix();
	glLoadIdentity();

	glColor3f(0.9f, 0.6f, 0.6f);
	glRasterPos2i(x, y);
	int32 length = (int32)strlen(buffer);
	for (int32 i = 0; i < length; ++i)
	{
		glutBitmapCharacter(GLUT_BITMAP_HELVETICA_18, buffer[i]);
	}

	glPopMatrix();
	glMatrixMode(GL_PROJECTION);
	glPopMatrix();
	glMatrixMode(GL_MODELVIEW);
}

void DrawString(const b2Vec2& p, const char *string, ...)
{
	char buffer[128];

	va_list arg;
	va_start(arg, string);
	vsprintf(buffer, string, arg);
	va_end(arg);

	glColor3f(0.5f, 0.9f, 0.5f);
	glRasterPos2f(p.x, p.y);

	int32 length = (int32)strlen(buffer);
	for (int32 i = 0; i < length; ++i)
	{
		glutBitmapCharacter(GLUT_BITMAP_8_BY_13, buffer[i]);
	}

	glPopMatrix();
}

void DrawSegment(const b2Vec2& p1, const b2Vec2& p2, const b2Color& color)
{
	glColor3f(color.r, color.g, color.b);
	glBegin(GL_LINES);
	glVertex2f(p1.x, p1.y);
	glVertex2f(p2.x, p2.y);
	glEnd();
}

#endif /* REPLAY_A2GAME_SAMPLE__H_ */
